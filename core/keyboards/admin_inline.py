from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder


def cancel_button_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ", callback_data="cancel_creation")
    )
    return builder.as_markup()

def generate_admin_menu_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞–º–∏."""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="‚ú¥Ô∏è–ê–∫—Ç–∏–≤–Ω—ã–µ", callback_data="active_draws"),
        InlineKeyboardButton(text="‚úÖ–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ", callback_data="completed_draws")
    )
    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data="back_to_previous_menu")
    )
    return builder.as_markup()

def create_check_buttons(drawing_id):
    """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –∏ –æ–ø–ª–∞—Ç –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üèû–°–∫—Ä–∏–Ω—à–æ—Ç—ã", callback_data=f"check_screenshots_{drawing_id}"))
    builder.row(InlineKeyboardButton(text="üí∞–û–ø–ª–∞—Ç—ã", callback_data=f"check_payments_{drawing_id}"))
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥", callback_data="back_to_previous_menu"))
    return builder.as_markup()

def create_screenshot_review_keyboard(drawing_id, participant_index, total_participants):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π."""
    builder = InlineKeyboardBuilder()

    # –ö–Ω–æ–ø–∫–∏ "–û–¥–æ–±—Ä–∏—Ç—å" –∏ "–û—Ç–∫–ª–æ–Ω–∏—Ç—å"
    builder.row(
        InlineKeyboardButton(text="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"approve_screenshot_{drawing_id}_{participant_index}"),
        InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_screenshot_{drawing_id}_{participant_index}")
    )

    # –ö–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (–≤–ø–µ—Ä–µ–¥ –∏ –Ω–∞–∑–∞–¥)
    if participant_index > 0:
        builder.row(
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–π", callback_data=f"prev_screenshot_{drawing_id}_{participant_index}")
        )
    if participant_index < total_participants - 1:
        builder.row(
            InlineKeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π", callback_data=f"next_screenshot_{drawing_id}_{participant_index}")
        )

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –º–µ–Ω—é
    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"manage_drawing_{drawing_id}")
    )

    return builder.as_markup()


def create_payment_review_keyboard(drawing_id, participant_index, total_participants):
    """–°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –æ–ø–ª–∞—Ç—ã."""
    builder = InlineKeyboardBuilder()

    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    if participant_index > 0:
        builder.add(InlineKeyboardButton(text="‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–π", callback_data=f"prev_payment_{drawing_id}_{participant_index}"))
    if participant_index < total_participants - 1:
        builder.add(InlineKeyboardButton(text="–°–ª–µ–¥—É—é—â–∏–π ‚û°Ô∏è", callback_data=f"next_payment_{drawing_id}_{participant_index}"))

    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    builder.row(
        InlineKeyboardButton(text="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"approve_payment_{drawing_id}_{participant_index}"),
        InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_payment_{drawing_id}_{participant_index}")
    )

    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"back_to_drawing_info_{drawing_id}"))

    return builder.as_markup()

def generate_drawing_summary_keyboard(drawing_id: int, winners_count: int) -> InlineKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–≤–æ–¥–∫–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞."""
    builder = InlineKeyboardBuilder()

    if winners_count == 0:
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π
        buttons = [
            InlineKeyboardButton(text=f"{count}", callback_data=f"set_winners_count_{drawing_id}_{count}")
            for count in range(1, 6)
        ]

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏ –∏–∑ –∫–Ω–æ–ø–æ–∫
        builder.row(*buttons[:3])  # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞: 1 2 3
        builder.row(*buttons[3:])  # –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞: 4 5

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="end_draw")
    )

    return builder.as_markup()




def generate_winner_selection_keyboard(drawing_id, participant_index, total_participants, user_id):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è."""
    builder = InlineKeyboardBuilder()

    builder.button(
        text="üëë –í—ã–±—Ä–∞—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è",
        callback_data=f"set_winner_{user_id}_{drawing_id}"  # –ü–µ—Ä–µ–¥–∞–µ–º user_id
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    if participant_index > 0:
        builder.button(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            callback_data=f"prev_participant_{participant_index}_{drawing_id}"
        )
    if participant_index < total_participants - 1:
        builder.button(
            text="‚û°Ô∏è –í–ø–µ—Ä–µ–¥",
            callback_data=f"next_participant_{participant_index}_{drawing_id}"
        )

    return builder.as_markup()


def generate_winners_summary_keyboard(drawing_id: int) -> InlineKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã–±–æ—Ä–æ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π."""
    builder = InlineKeyboardBuilder()

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π
    builder.button(
        text="üëë –í—ã–±—Ä–∞—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π",
        callback_data=f"select_winners_{drawing_id}"
    )

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    builder.button(
        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
        callback_data="end_draw"
    )

    return builder.as_markup()
